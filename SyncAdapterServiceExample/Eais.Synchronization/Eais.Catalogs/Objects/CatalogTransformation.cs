//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Iis.Eais.Catalogs
{
    using System;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;


    // *** Start programmer edit section *** (Using statements)
    using Iis.Eais.Common;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Перекодировочные.
    /// </summary>
    // *** Start programmer edit section *** (CatalogTransformation CustomAttributes)
    [Primary(true)]
    [Serializable]
    // *** End programmer edit section *** (CatalogTransformation CustomAttributes)
    [AutoAltered()]
    [Caption("Перекодировочные")]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Name as \'Name\'",
            "Description as \'Description\'",
            "ForeignCatalog as \'ForeignCatalog\'",
            "ForeignCatalog.Code as \'ForeignCode\'",
            "ModelType",
            "ModelProjectionName",
            "ModelDescProp"})]
    [AssociatedDetailViewAttribute("AuditView", "Transformations", "TransformationE", true, "", "", true, new string[] {
            ""})]
    [View("CatalogTransformationE", new string[] {
            "Name as \'Название\'",
            "Description as \'Описание\'",
            "ForeignCatalog as \'Внешний справочник\'",
            "ForeignCatalog.Code",
            "ForeignCatalog.Name",
            "ModelType as \'Тип\'",
            "ModelProjectionName as \'Представление\'",
            "ModelDescProp as \'Описывающее свойство\'"}, Hidden = new string[] {
            "ForeignCatalog.Code",
            "ForeignCatalog.Name"})]
    [View("CatalogTransformationL", new string[] {
            "Name as \'Название\'",
            "Description as \'Описание\'",
            "ForeignCatalog",
            "ForeignCatalog.Name as \'Внешний справочник\'",
            "ForeignCatalog.Code",
            "ModelType as \'Тип\'",
            "ModelProjectionName as \'Представление\'",
            "ModelDescProp as \'Описывающее свойство модели\'",
            "CreateTime as \'Время создания\'",
            "Creator as \'Создатель\'",
            "EditTime as \'Время последнего редактирования\'",
            "Editor as \'Последний редактор\'"}, Hidden = new string[] {
            "ForeignCatalog",
            "ForeignCatalog.Code"})]
    public class CatalogTransformation : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {

        private string fName;

        private string fDescription;

        private string fModelType;

        private string fModelProjectionName;

        private string fModelDescProp;

        private System.Nullable<System.DateTime> fCreateTime;

        private string fCreator;

        private System.Nullable<System.DateTime> fEditTime;

        private string fEditor;

        private Iis.Eais.Catalogs.Catalog fForeignCatalog;

        private Iis.Eais.Catalogs.DetailArrayOfTransformation fTransformations;

        // *** Start programmer edit section *** (CatalogTransformation CustomMembers)

        // *** End programmer edit section *** (CatalogTransformation CustomMembers)


        /// <summary>
        /// Name.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.Name CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.Name CustomAttributes)
        public virtual string Name
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.Name Get start)

                // *** End programmer edit section *** (CatalogTransformation.Name Get start)
                string result = this.fName;
                // *** Start programmer edit section *** (CatalogTransformation.Name Get end)

                // *** End programmer edit section *** (CatalogTransformation.Name Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.Name Set start)

                // *** End programmer edit section *** (CatalogTransformation.Name Set start)
                this.fName = value;
                // *** Start programmer edit section *** (CatalogTransformation.Name Set end)

                // *** End programmer edit section *** (CatalogTransformation.Name Set end)
            }
        }

        /// <summary>
        /// Description.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.Description CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.Description CustomAttributes)
        public virtual string Description
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.Description Get start)

                // *** End programmer edit section *** (CatalogTransformation.Description Get start)
                string result = this.fDescription;
                // *** Start programmer edit section *** (CatalogTransformation.Description Get end)

                // *** End programmer edit section *** (CatalogTransformation.Description Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.Description Set start)

                // *** End programmer edit section *** (CatalogTransformation.Description Set start)
                this.fDescription = value;
                // *** Start programmer edit section *** (CatalogTransformation.Description Set end)

                // *** End programmer edit section *** (CatalogTransformation.Description Set end)
            }
        }

        /// <summary>
        /// ModelType.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.ModelType CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.ModelType CustomAttributes)
        public virtual string ModelType
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.ModelType Get start)

                // *** End programmer edit section *** (CatalogTransformation.ModelType Get start)
                string result = this.fModelType;
                // *** Start programmer edit section *** (CatalogTransformation.ModelType Get end)

                // *** End programmer edit section *** (CatalogTransformation.ModelType Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.ModelType Set start)

                // *** End programmer edit section *** (CatalogTransformation.ModelType Set start)
                this.fModelType = value;
                // *** Start programmer edit section *** (CatalogTransformation.ModelType Set end)

                // *** End programmer edit section *** (CatalogTransformation.ModelType Set end)
            }
        }

        /// <summary>
        /// ModelProjectionName.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.ModelProjectionName CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.ModelProjectionName CustomAttributes)
        public virtual string ModelProjectionName
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.ModelProjectionName Get start)

                // *** End programmer edit section *** (CatalogTransformation.ModelProjectionName Get start)
                string result = this.fModelProjectionName;
                // *** Start programmer edit section *** (CatalogTransformation.ModelProjectionName Get end)

                // *** End programmer edit section *** (CatalogTransformation.ModelProjectionName Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.ModelProjectionName Set start)

                // *** End programmer edit section *** (CatalogTransformation.ModelProjectionName Set start)
                this.fModelProjectionName = value;
                // *** Start programmer edit section *** (CatalogTransformation.ModelProjectionName Set end)

                // *** End programmer edit section *** (CatalogTransformation.ModelProjectionName Set end)
            }
        }

        /// <summary>
        /// ModelDescProp.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.ModelDescProp CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.ModelDescProp CustomAttributes)
        public virtual string ModelDescProp
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.ModelDescProp Get start)

                // *** End programmer edit section *** (CatalogTransformation.ModelDescProp Get start)
                string result = this.fModelDescProp;
                // *** Start programmer edit section *** (CatalogTransformation.ModelDescProp Get end)

                // *** End programmer edit section *** (CatalogTransformation.ModelDescProp Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.ModelDescProp Set start)

                // *** End programmer edit section *** (CatalogTransformation.ModelDescProp Set start)
                this.fModelDescProp = value;
                // *** Start programmer edit section *** (CatalogTransformation.ModelDescProp Set end)

                // *** End programmer edit section *** (CatalogTransformation.ModelDescProp Set end)
            }
        }

        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.CreateTime CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.CreateTime Get start)

                // *** End programmer edit section *** (CatalogTransformation.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (CatalogTransformation.CreateTime Get end)

                // *** End programmer edit section *** (CatalogTransformation.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.CreateTime Set start)

                // *** End programmer edit section *** (CatalogTransformation.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (CatalogTransformation.CreateTime Set end)

                // *** End programmer edit section *** (CatalogTransformation.CreateTime Set end)
            }
        }

        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.Creator CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.Creator Get start)

                // *** End programmer edit section *** (CatalogTransformation.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (CatalogTransformation.Creator Get end)

                // *** End programmer edit section *** (CatalogTransformation.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.Creator Set start)

                // *** End programmer edit section *** (CatalogTransformation.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (CatalogTransformation.Creator Set end)

                // *** End programmer edit section *** (CatalogTransformation.Creator Set end)
            }
        }

        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.EditTime CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.EditTime Get start)

                // *** End programmer edit section *** (CatalogTransformation.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (CatalogTransformation.EditTime Get end)

                // *** End programmer edit section *** (CatalogTransformation.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.EditTime Set start)

                // *** End programmer edit section *** (CatalogTransformation.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (CatalogTransformation.EditTime Set end)

                // *** End programmer edit section *** (CatalogTransformation.EditTime Set end)
            }
        }

        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.Editor CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.Editor Get start)

                // *** End programmer edit section *** (CatalogTransformation.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (CatalogTransformation.Editor Get end)

                // *** End programmer edit section *** (CatalogTransformation.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.Editor Set start)

                // *** End programmer edit section *** (CatalogTransformation.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (CatalogTransformation.Editor Set end)

                // *** End programmer edit section *** (CatalogTransformation.Editor Set end)
            }
        }

        /// <summary>
        /// Перекодировочные.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.ForeignCatalog CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.ForeignCatalog CustomAttributes)
        [NotNull()]
        public virtual Iis.Eais.Catalogs.Catalog ForeignCatalog
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.ForeignCatalog Get start)

                // *** End programmer edit section *** (CatalogTransformation.ForeignCatalog Get start)
                Iis.Eais.Catalogs.Catalog result = this.fForeignCatalog;
                // *** Start programmer edit section *** (CatalogTransformation.ForeignCatalog Get end)

                // *** End programmer edit section *** (CatalogTransformation.ForeignCatalog Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.ForeignCatalog Set start)

                // *** End programmer edit section *** (CatalogTransformation.ForeignCatalog Set start)
                this.fForeignCatalog = value;
                // *** Start programmer edit section *** (CatalogTransformation.ForeignCatalog Set end)

                // *** End programmer edit section *** (CatalogTransformation.ForeignCatalog Set end)
            }
        }

        /// <summary>
        /// Перекодировочные.
        /// </summary>
        // *** Start programmer edit section *** (CatalogTransformation.Transformations CustomAttributes)

        // *** End programmer edit section *** (CatalogTransformation.Transformations CustomAttributes)
        public virtual Iis.Eais.Catalogs.DetailArrayOfTransformation Transformations
        {
            get
            {
                // *** Start programmer edit section *** (CatalogTransformation.Transformations Get start)

                // *** End programmer edit section *** (CatalogTransformation.Transformations Get start)
                if ((this.fTransformations == null))
                {
                    this.fTransformations = new Iis.Eais.Catalogs.DetailArrayOfTransformation(this);
                }
                Iis.Eais.Catalogs.DetailArrayOfTransformation result = this.fTransformations;
                // *** Start programmer edit section *** (CatalogTransformation.Transformations Get end)

                // *** End programmer edit section *** (CatalogTransformation.Transformations Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (CatalogTransformation.Transformations Set start)

                // *** End programmer edit section *** (CatalogTransformation.Transformations Set start)
                this.fTransformations = value;
                // *** Start programmer edit section *** (CatalogTransformation.Transformations Set end)

                // *** End programmer edit section *** (CatalogTransformation.Transformations Set end)
            }
        }

        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {

            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(Iis.Eais.Catalogs.CatalogTransformation));
                }
            }

            /// <summary>
            /// "CatalogTransformationE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View CatalogTransformationE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("CatalogTransformationE", typeof(Iis.Eais.Catalogs.CatalogTransformation));
                }
            }

            /// <summary>
            /// "CatalogTransformationL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View CatalogTransformationL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("CatalogTransformationL", typeof(Iis.Eais.Catalogs.CatalogTransformation));
                }
            }
        }

        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {

            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;

            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;

            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;

            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";

            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";

            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;

            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;

            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;

            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;

            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;

            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
