//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Iis.Eais.Catalogs
{
    using System;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;


    // *** Start programmer edit section *** (Using statements)
    using Iis.Eais.Common;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Transformation.
    /// </summary>
    // *** Start programmer edit section *** (Transformation CustomAttributes)
    [Primary(true)]
    [Serializable]
    // *** End programmer edit section *** (Transformation CustomAttributes)
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "EAISCode as \'EAISCode\'",
            "ForeignCode as \'ForeignCode\'",
            "Catalog as \'Catalog\'",
            "Catalog.Description as \'Description\'",
            "ForeignValue as \'ForeignValue\'",
            "ForeignValue.Code as \'ForeignValueCode\'",
            "NoActual as \'NoActual\'",
            "FullValue as \'FullValue\'",
            "Description as \'Description\'"})]
    [View("TransformationE", new string[] {
            "ForeignCode as \'Внешний код\'",
            "EAISCode as \'Код ЕАИС\'",
            "Description as \'Описание\'",
            "NoActual as \'Не актуален с\'",
            "FullValue as \'Значение\'",
            "Catalog as \'Справочник\'",
            "Catalog.Name",
            "Catalog.Description",
            "ForeignValue as \'Внешний справочник\'",
            "ForeignValue.Code",
            "ForeignValue.Description"}, Hidden = new string[] {
            "Catalog.Name",
            "ForeignValue.Code"})]
    [MasterViewDefineAttribute("TransformationE", "Catalog", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Description")]
    [MasterViewDefineAttribute("TransformationE", "ForeignValue", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Description")]
    [View("TransformationL", new string[] {
            "ForeignCode as \'Внешний код\'",
            "EAISCode as \'Код ЕАИС\'",
            "Description as \'Описание\'",
            "NoActual as \'Не актуален с\'",
            "FullValue as \'Значение\'",
            "Catalog",
            "Catalog.Description as \'Справочник\'",
            "ForeignValue",
            "ForeignValue.Description as \'Внешний справочник\'",
            "CreateTime as \'Время создания\'",
            "Creator as \'Создатель\'",
            "EditTime as \'Время последнего редактирования\'",
            "Editor as \'Последний редактор\'"}, Hidden = new string[] {
            "Catalog",
            "ForeignValue"})]
    public class Transformation : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {

        private string fForeignCode;

        private string fEAISCode;

        private string fDescription;

        private System.DateTime? fNoActual;

        private string fFullValue;

        private System.Nullable<System.DateTime> fCreateTime;

        private string fCreator;

        private System.Nullable<System.DateTime> fEditTime;

        private string fEditor;

        private Iis.Eais.Catalogs.ForeignCatValue fForeignValue;

        private Iis.Eais.Catalogs.CatalogTransformation fCatalog;

        // *** Start programmer edit section *** (Transformation CustomMembers)

        // *** End programmer edit section *** (Transformation CustomMembers)


        /// <summary>
        /// ForeignCode.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.ForeignCode CustomAttributes)

        // *** End programmer edit section *** (Transformation.ForeignCode CustomAttributes)
        public virtual string ForeignCode
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.ForeignCode Get start)

                // *** End programmer edit section *** (Transformation.ForeignCode Get start)
                string result = this.fForeignCode;
                // *** Start programmer edit section *** (Transformation.ForeignCode Get end)

                // *** End programmer edit section *** (Transformation.ForeignCode Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.ForeignCode Set start)

                // *** End programmer edit section *** (Transformation.ForeignCode Set start)
                this.fForeignCode = value;
                // *** Start programmer edit section *** (Transformation.ForeignCode Set end)

                // *** End programmer edit section *** (Transformation.ForeignCode Set end)
            }
        }

        /// <summary>
        /// EAISCode.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.EAISCode CustomAttributes)

        // *** End programmer edit section *** (Transformation.EAISCode CustomAttributes)
        public virtual string EAISCode
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.EAISCode Get start)

                // *** End programmer edit section *** (Transformation.EAISCode Get start)
                string result = this.fEAISCode;
                // *** Start programmer edit section *** (Transformation.EAISCode Get end)

                // *** End programmer edit section *** (Transformation.EAISCode Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.EAISCode Set start)

                // *** End programmer edit section *** (Transformation.EAISCode Set start)
                this.fEAISCode = value;
                // *** Start programmer edit section *** (Transformation.EAISCode Set end)

                // *** End programmer edit section *** (Transformation.EAISCode Set end)
            }
        }

        /// <summary>
        /// Description.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.Description CustomAttributes)

        // *** End programmer edit section *** (Transformation.Description CustomAttributes)
        public virtual string Description
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.Description Get start)

                // *** End programmer edit section *** (Transformation.Description Get start)
                string result = this.fDescription;
                // *** Start programmer edit section *** (Transformation.Description Get end)

                // *** End programmer edit section *** (Transformation.Description Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.Description Set start)

                // *** End programmer edit section *** (Transformation.Description Set start)
                this.fDescription = value;
                // *** Start programmer edit section *** (Transformation.Description Set end)

                // *** End programmer edit section *** (Transformation.Description Set end)
            }
        }

        /// <summary>
        /// NoActual.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.NoActual CustomAttributes)

        // *** End programmer edit section *** (Transformation.NoActual CustomAttributes)
        public virtual System.DateTime? NoActual
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.NoActual Get start)

                // *** End programmer edit section *** (Transformation.NoActual Get start)
                System.DateTime? result = this.fNoActual;
                // *** Start programmer edit section *** (Transformation.NoActual Get end)

                // *** End programmer edit section *** (Transformation.NoActual Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.NoActual Set start)

                // *** End programmer edit section *** (Transformation.NoActual Set start)
                this.fNoActual = value;
                // *** Start programmer edit section *** (Transformation.NoActual Set end)

                // *** End programmer edit section *** (Transformation.NoActual Set end)
            }
        }

        /// <summary>
        /// FullValue.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.FullValue CustomAttributes)

        // *** End programmer edit section *** (Transformation.FullValue CustomAttributes)
        public virtual string FullValue
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.FullValue Get start)

                // *** End programmer edit section *** (Transformation.FullValue Get start)
                string result = this.fFullValue;
                // *** Start programmer edit section *** (Transformation.FullValue Get end)

                // *** End programmer edit section *** (Transformation.FullValue Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.FullValue Set start)

                // *** End programmer edit section *** (Transformation.FullValue Set start)
                this.fFullValue = value;
                // *** Start programmer edit section *** (Transformation.FullValue Set end)

                // *** End programmer edit section *** (Transformation.FullValue Set end)
            }
        }

        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Transformation.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.CreateTime Get start)

                // *** End programmer edit section *** (Transformation.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Transformation.CreateTime Get end)

                // *** End programmer edit section *** (Transformation.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.CreateTime Set start)

                // *** End programmer edit section *** (Transformation.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Transformation.CreateTime Set end)

                // *** End programmer edit section *** (Transformation.CreateTime Set end)
            }
        }

        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.Creator CustomAttributes)

        // *** End programmer edit section *** (Transformation.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.Creator Get start)

                // *** End programmer edit section *** (Transformation.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Transformation.Creator Get end)

                // *** End programmer edit section *** (Transformation.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.Creator Set start)

                // *** End programmer edit section *** (Transformation.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Transformation.Creator Set end)

                // *** End programmer edit section *** (Transformation.Creator Set end)
            }
        }

        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.EditTime CustomAttributes)

        // *** End programmer edit section *** (Transformation.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.EditTime Get start)

                // *** End programmer edit section *** (Transformation.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Transformation.EditTime Get end)

                // *** End programmer edit section *** (Transformation.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.EditTime Set start)

                // *** End programmer edit section *** (Transformation.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Transformation.EditTime Set end)

                // *** End programmer edit section *** (Transformation.EditTime Set end)
            }
        }

        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.Editor CustomAttributes)

        // *** End programmer edit section *** (Transformation.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.Editor Get start)

                // *** End programmer edit section *** (Transformation.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Transformation.Editor Get end)

                // *** End programmer edit section *** (Transformation.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.Editor Set start)

                // *** End programmer edit section *** (Transformation.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Transformation.Editor Set end)

                // *** End programmer edit section *** (Transformation.Editor Set end)
            }
        }

        /// <summary>
        /// Transformation.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.ForeignValue CustomAttributes)

        // *** End programmer edit section *** (Transformation.ForeignValue CustomAttributes)
        public virtual Iis.Eais.Catalogs.ForeignCatValue ForeignValue
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.ForeignValue Get start)

                // *** End programmer edit section *** (Transformation.ForeignValue Get start)
                Iis.Eais.Catalogs.ForeignCatValue result = this.fForeignValue;
                // *** Start programmer edit section *** (Transformation.ForeignValue Get end)

                // *** End programmer edit section *** (Transformation.ForeignValue Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.ForeignValue Set start)

                // *** End programmer edit section *** (Transformation.ForeignValue Set start)
                this.fForeignValue = value;
                // *** Start programmer edit section *** (Transformation.ForeignValue Set end)

                // *** End programmer edit section *** (Transformation.ForeignValue Set end)
            }
        }

        /// <summary>
        /// мастеровая ссылка на шапку Iis.Eais.Catalogs.CatalogTransformation.
        /// </summary>
        // *** Start programmer edit section *** (Transformation.Catalog CustomAttributes)

        // *** End programmer edit section *** (Transformation.Catalog CustomAttributes)
        [Agregator()]
        [NotNull()]
        public virtual Iis.Eais.Catalogs.CatalogTransformation Catalog
        {
            get
            {
                // *** Start programmer edit section *** (Transformation.Catalog Get start)

                // *** End programmer edit section *** (Transformation.Catalog Get start)
                Iis.Eais.Catalogs.CatalogTransformation result = this.fCatalog;
                // *** Start programmer edit section *** (Transformation.Catalog Get end)

                // *** End programmer edit section *** (Transformation.Catalog Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Transformation.Catalog Set start)

                // *** End programmer edit section *** (Transformation.Catalog Set start)
                this.fCatalog = value;
                // *** Start programmer edit section *** (Transformation.Catalog Set end)

                // *** End programmer edit section *** (Transformation.Catalog Set end)
            }
        }

        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {

            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(Iis.Eais.Catalogs.Transformation));
                }
            }

            /// <summary>
            /// "TransformationE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View TransformationE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("TransformationE", typeof(Iis.Eais.Catalogs.Transformation));
                }
            }

            /// <summary>
            /// "TransformationL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View TransformationL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("TransformationL", typeof(Iis.Eais.Catalogs.Transformation));
                }
            }
        }

        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {

            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;

            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;

            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;

            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";

            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";

            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;

            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;

            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;

            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;

            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;

            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }

    /// <summary>
    /// Detail array of Transformation.
    /// </summary>
    // *** Start programmer edit section *** (DetailArrayDetailArrayOfTransformation CustomAttributes)
    [Serializable]
    // *** End programmer edit section *** (DetailArrayDetailArrayOfTransformation CustomAttributes)
    public class DetailArrayOfTransformation : ICSSoft.STORMNET.DetailArray
    {

        // *** Start programmer edit section *** (Iis.Eais.Catalogs.DetailArrayOfTransformation members)

        // *** End programmer edit section *** (Iis.Eais.Catalogs.DetailArrayOfTransformation members)


        /// <summary>
        /// Construct detail array.
        /// </summary>
        /// <summary>
        /// Returns object with type Transformation by index.
        /// </summary>
        /// <summary>
        /// Adds object with type Transformation.
        /// </summary>
        public DetailArrayOfTransformation(Iis.Eais.Catalogs.CatalogTransformation fCatalogTransformation) :
                base(typeof(Transformation), ((ICSSoft.STORMNET.DataObject)(fCatalogTransformation)))
        {
        }

        public Iis.Eais.Catalogs.Transformation this[int index]
        {
            get
            {
                return ((Iis.Eais.Catalogs.Transformation)(this.ItemByIndex(index)));
            }
        }

        public virtual void Add(Iis.Eais.Catalogs.Transformation dataobject)
        {
            this.AddObject(((ICSSoft.STORMNET.DataObject)(dataobject)));
        }
    }
}
