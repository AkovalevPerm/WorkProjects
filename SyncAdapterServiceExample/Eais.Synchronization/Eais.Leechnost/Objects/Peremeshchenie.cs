//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Iis.Eais.Leechnost
{
    using System;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;


    // *** Start programmer edit section *** (Using statements)
    using Iis.Eais.Common;
    using IIS.Synchronizer;

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Перемещение.
    /// </summary>
    // *** Start programmer edit section *** (Peremeshchenie CustomAttributes)
    [Primary(true)]
    [Serializable]
    // *** End programmer edit section *** (Peremeshchenie CustomAttributes)
    [AutoAltered()]
    [Caption("Перемещение")]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "DataUbytiia as \'Дата убытия\'",
            "TipAdresa as \'Тип адреса\'",
            "Creator as \'Создатель\'",
            "CreateTime as \'Время создания\'",
            "Editor as \'Последний редактор\'",
            "EditTime as \'Время последнего редактирования\'",
            "AdresUbytiia as \'Адрес убытия\'",
            "PrichinaPeremeshcheniia as \'Причина перемещения\'",
            "Leechnost as \'Личность\'",
            "kommentarii as \'Комментарий\'"})]
    [View("PeremeshchenieE", new string[] {
            "Leechnost",
            "Leechnost.Familiia as \'Фамилимя\'",
            "Leechnost.Imia as \'Имя\'",
            "Leechnost.Otchestvo as \'Отчество\'",
            "Leechnost.DataRozhdeniia as \'Дата рождения\'",
            "Leechnost.Telefon as \'Телефон\'",
            "PrichinaPeremeshcheniia as \'Причина перемещения\'",
            "AdresUbytiia as \'Адрес убытия\'",
            "DataUbytiia as \'Дата убытия\'",
            "TipAdresa as \'Тип адреса\'"})]
    [View("PeremeshchenieL", new string[] {
            "DataUbytiia as \'Дата убытия\'",
            "TipAdresa as \'Тип адреса\'",
            "AdresUbytiia as \'Адрес убытия\'",
            "PrichinaPeremeshcheniia as \'Причина перемещения\'"}, Hidden = new string[] {
            "AdresUbytiia",
            "PrichinaPeremeshcheniia"})]
    public class Peremeshchenie : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields, ISync
    {

        private ICSSoft.STORMNET.UserDataTypes.NullableDateTime fDataUbytiia;

        private Iis.Eais.Leechnost.tTipAdresa fTipAdresa;

        private System.Nullable<System.DateTime> fCreateTime;

        private string fCreator;

        private System.Nullable<System.DateTime> fEditTime;

        private string fEditor;

        private string fkommentarii;

        private Iis.Eais.Leechnost.Prozhivanie fAdresUbytiia;

        private Iis.Eais.Leechnost.PrichinaPeremeshcheniia fPrichinaPeremeshcheniia;

        private Iis.Eais.Leechnost.Leechnost fLeechnost;

        // *** Start programmer edit section *** (Peremeshchenie CustomMembers)

        // *** End programmer edit section *** (Peremeshchenie CustomMembers)


        /// <summary>
        /// DataUbytiia.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.DataUbytiia CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.DataUbytiia CustomAttributes)
        public virtual ICSSoft.STORMNET.UserDataTypes.NullableDateTime DataUbytiia
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.DataUbytiia Get start)

                // *** End programmer edit section *** (Peremeshchenie.DataUbytiia Get start)
                ICSSoft.STORMNET.UserDataTypes.NullableDateTime result = this.fDataUbytiia;
                // *** Start programmer edit section *** (Peremeshchenie.DataUbytiia Get end)

                // *** End programmer edit section *** (Peremeshchenie.DataUbytiia Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.DataUbytiia Set start)

                // *** End programmer edit section *** (Peremeshchenie.DataUbytiia Set start)
                this.fDataUbytiia = value;
                // *** Start programmer edit section *** (Peremeshchenie.DataUbytiia Set end)

                // *** End programmer edit section *** (Peremeshchenie.DataUbytiia Set end)
            }
        }

        /// <summary>
        /// TipAdresa.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.TipAdresa CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.TipAdresa CustomAttributes)
        public virtual Iis.Eais.Leechnost.tTipAdresa TipAdresa
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.TipAdresa Get start)

                // *** End programmer edit section *** (Peremeshchenie.TipAdresa Get start)
                Iis.Eais.Leechnost.tTipAdresa result = this.fTipAdresa;
                // *** Start programmer edit section *** (Peremeshchenie.TipAdresa Get end)

                // *** End programmer edit section *** (Peremeshchenie.TipAdresa Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.TipAdresa Set start)

                // *** End programmer edit section *** (Peremeshchenie.TipAdresa Set start)
                this.fTipAdresa = value;
                // *** Start programmer edit section *** (Peremeshchenie.TipAdresa Set end)

                // *** End programmer edit section *** (Peremeshchenie.TipAdresa Set end)
            }
        }

        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.CreateTime Get start)

                // *** End programmer edit section *** (Peremeshchenie.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Peremeshchenie.CreateTime Get end)

                // *** End programmer edit section *** (Peremeshchenie.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.CreateTime Set start)

                // *** End programmer edit section *** (Peremeshchenie.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Peremeshchenie.CreateTime Set end)

                // *** End programmer edit section *** (Peremeshchenie.CreateTime Set end)
            }
        }

        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.Creator CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.Creator Get start)

                // *** End programmer edit section *** (Peremeshchenie.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Peremeshchenie.Creator Get end)

                // *** End programmer edit section *** (Peremeshchenie.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.Creator Set start)

                // *** End programmer edit section *** (Peremeshchenie.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Peremeshchenie.Creator Set end)

                // *** End programmer edit section *** (Peremeshchenie.Creator Set end)
            }
        }

        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.EditTime CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.EditTime Get start)

                // *** End programmer edit section *** (Peremeshchenie.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Peremeshchenie.EditTime Get end)

                // *** End programmer edit section *** (Peremeshchenie.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.EditTime Set start)

                // *** End programmer edit section *** (Peremeshchenie.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Peremeshchenie.EditTime Set end)

                // *** End programmer edit section *** (Peremeshchenie.EditTime Set end)
            }
        }

        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.Editor CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.Editor Get start)

                // *** End programmer edit section *** (Peremeshchenie.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Peremeshchenie.Editor Get end)

                // *** End programmer edit section *** (Peremeshchenie.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.Editor Set start)

                // *** End programmer edit section *** (Peremeshchenie.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Peremeshchenie.Editor Set end)

                // *** End programmer edit section *** (Peremeshchenie.Editor Set end)
            }
        }

        /// <summary>
        /// kommentarii.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.kommentarii CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.kommentarii CustomAttributes)
        public virtual string kommentarii
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.kommentarii Get start)

                // *** End programmer edit section *** (Peremeshchenie.kommentarii Get start)
                string result = this.fkommentarii;
                // *** Start programmer edit section *** (Peremeshchenie.kommentarii Get end)

                // *** End programmer edit section *** (Peremeshchenie.kommentarii Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.kommentarii Set start)

                // *** End programmer edit section *** (Peremeshchenie.kommentarii Set start)
                this.fkommentarii = value;
                // *** Start programmer edit section *** (Peremeshchenie.kommentarii Set end)

                // *** End programmer edit section *** (Peremeshchenie.kommentarii Set end)
            }
        }

        /// <summary>
        /// Перемещение.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.AdresUbytiia CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.AdresUbytiia CustomAttributes)
        [PropertyStorage(new string[] {
                "AdresUbytiia"})]
        [NotNull()]
        public virtual Iis.Eais.Leechnost.Prozhivanie AdresUbytiia
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.AdresUbytiia Get start)

                // *** End programmer edit section *** (Peremeshchenie.AdresUbytiia Get start)
                Iis.Eais.Leechnost.Prozhivanie result = this.fAdresUbytiia;
                // *** Start programmer edit section *** (Peremeshchenie.AdresUbytiia Get end)

                // *** End programmer edit section *** (Peremeshchenie.AdresUbytiia Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.AdresUbytiia Set start)

                // *** End programmer edit section *** (Peremeshchenie.AdresUbytiia Set start)
                this.fAdresUbytiia = value;
                // *** Start programmer edit section *** (Peremeshchenie.AdresUbytiia Set end)

                // *** End programmer edit section *** (Peremeshchenie.AdresUbytiia Set end)
            }
        }

        /// <summary>
        /// Перемещение.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia CustomAttributes)
        [PropertyStorage(new string[] {
                "PrichinaPeremeshcheniia"})]
        public virtual Iis.Eais.Leechnost.PrichinaPeremeshcheniia PrichinaPeremeshcheniia
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Get start)

                // *** End programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Get start)
                Iis.Eais.Leechnost.PrichinaPeremeshcheniia result = this.fPrichinaPeremeshcheniia;
                // *** Start programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Get end)

                // *** End programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Set start)

                // *** End programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Set start)
                this.fPrichinaPeremeshcheniia = value;
                // *** Start programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Set end)

                // *** End programmer edit section *** (Peremeshchenie.PrichinaPeremeshcheniia Set end)
            }
        }

        /// <summary>
        /// Перемещение.
        /// </summary>
        // *** Start programmer edit section *** (Peremeshchenie.Leechnost CustomAttributes)

        // *** End programmer edit section *** (Peremeshchenie.Leechnost CustomAttributes)
        [PropertyStorage(new string[] {
                "Leechnost"})]
        [NotNull()]
        public virtual Iis.Eais.Leechnost.Leechnost Leechnost
        {
            get
            {
                // *** Start programmer edit section *** (Peremeshchenie.Leechnost Get start)

                // *** End programmer edit section *** (Peremeshchenie.Leechnost Get start)
                Iis.Eais.Leechnost.Leechnost result = this.fLeechnost;
                // *** Start programmer edit section *** (Peremeshchenie.Leechnost Get end)

                // *** End programmer edit section *** (Peremeshchenie.Leechnost Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Peremeshchenie.Leechnost Set start)

                // *** End programmer edit section *** (Peremeshchenie.Leechnost Set start)
                this.fLeechnost = value;
                // *** Start programmer edit section *** (Peremeshchenie.Leechnost Set end)

                // *** End programmer edit section *** (Peremeshchenie.Leechnost Set end)
            }
        }

        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {

            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(Iis.Eais.Leechnost.Peremeshchenie));
                }
            }

            /// <summary>
            /// "PeremeshchenieE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View PeremeshchenieE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("PeremeshchenieE", typeof(Iis.Eais.Leechnost.Peremeshchenie));
                }
            }

            /// <summary>
            /// "PeremeshchenieL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View PeremeshchenieL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("PeremeshchenieL", typeof(Iis.Eais.Leechnost.Peremeshchenie));
                }
            }
        }

        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {

            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;

            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;

            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;

            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";

            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;

            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";

            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";

            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;

            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;

            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;

            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;

            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;

            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
