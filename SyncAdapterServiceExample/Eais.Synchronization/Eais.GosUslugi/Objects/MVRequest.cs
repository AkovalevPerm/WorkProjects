//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Iis.Eais.GosUslugi
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)
    using Iis.Eais.Common;
    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// MVRequest.
    /// </summary>
    // *** Start programmer edit section *** (MVRequest CustomAttributes)
    [Serializable]
    [Primary(true)]
    // *** End programmer edit section *** (MVRequest CustomAttributes)
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.@this)]
    [View("AuditView", new string[] {
            "Name as \'Name\'",
            "RequestConfiguration as \'RequestConfiguration\'",
            "RequestConfiguration.Name"}, Hidden=new string[] {
            "RequestConfiguration.Name"})]
    [MasterViewDefineAttribute("AuditView", "RequestConfiguration", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    [View("MVRequestE", new string[] {
            "Name as \'Наименование\'",
            "RequestConfiguration as \'Конфигурация\'",
            "RequestConfiguration.Name"}, Hidden=new string[] {
            "RequestConfiguration.Name"})]
    [MasterViewDefineAttribute("MVRequestE", "RequestConfiguration", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    [View("MVRequestL", new string[] {
            "Name as \'Наименование\'",
            "RequestConfiguration",
            "RequestConfiguration.Name as \'Конфигурация\'"}, Hidden=new string[] {
            "RequestConfiguration"})]
    public class MVRequest : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private string fName;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private Uismv.Requests.RequestConfiguration fRequestConfiguration;
        
        // *** Start programmer edit section *** (MVRequest CustomMembers)

        // *** End programmer edit section *** (MVRequest CustomMembers)

        
        /// <summary>
        /// Name.
        /// </summary>
        // *** Start programmer edit section *** (MVRequest.Name CustomAttributes)

        // *** End programmer edit section *** (MVRequest.Name CustomAttributes)
        [StrLen(100)]
        [NotNull()]
        public virtual string Name
        {
            get
            {
                // *** Start programmer edit section *** (MVRequest.Name Get start)

                // *** End programmer edit section *** (MVRequest.Name Get start)
                string result = this.fName;
                // *** Start programmer edit section *** (MVRequest.Name Get end)

                // *** End programmer edit section *** (MVRequest.Name Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (MVRequest.Name Set start)

                // *** End programmer edit section *** (MVRequest.Name Set start)
                this.fName = value;
                // *** Start programmer edit section *** (MVRequest.Name Set end)

                // *** End programmer edit section *** (MVRequest.Name Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (MVRequest.CreateTime CustomAttributes)

        // *** End programmer edit section *** (MVRequest.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (MVRequest.CreateTime Get start)

                // *** End programmer edit section *** (MVRequest.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (MVRequest.CreateTime Get end)

                // *** End programmer edit section *** (MVRequest.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (MVRequest.CreateTime Set start)

                // *** End programmer edit section *** (MVRequest.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (MVRequest.CreateTime Set end)

                // *** End programmer edit section *** (MVRequest.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (MVRequest.Creator CustomAttributes)

        // *** End programmer edit section *** (MVRequest.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (MVRequest.Creator Get start)

                // *** End programmer edit section *** (MVRequest.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (MVRequest.Creator Get end)

                // *** End programmer edit section *** (MVRequest.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (MVRequest.Creator Set start)

                // *** End programmer edit section *** (MVRequest.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (MVRequest.Creator Set end)

                // *** End programmer edit section *** (MVRequest.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (MVRequest.EditTime CustomAttributes)

        // *** End programmer edit section *** (MVRequest.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (MVRequest.EditTime Get start)

                // *** End programmer edit section *** (MVRequest.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (MVRequest.EditTime Get end)

                // *** End programmer edit section *** (MVRequest.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (MVRequest.EditTime Set start)

                // *** End programmer edit section *** (MVRequest.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (MVRequest.EditTime Set end)

                // *** End programmer edit section *** (MVRequest.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (MVRequest.Editor CustomAttributes)

        // *** End programmer edit section *** (MVRequest.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (MVRequest.Editor Get start)

                // *** End programmer edit section *** (MVRequest.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (MVRequest.Editor Get end)

                // *** End programmer edit section *** (MVRequest.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (MVRequest.Editor Set start)

                // *** End programmer edit section *** (MVRequest.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (MVRequest.Editor Set end)

                // *** End programmer edit section *** (MVRequest.Editor Set end)
            }
        }
        
        /// <summary>
        /// MVRequest.
        /// </summary>
        // *** Start programmer edit section *** (MVRequest.RequestConfiguration CustomAttributes)

        // *** End programmer edit section *** (MVRequest.RequestConfiguration CustomAttributes)
        [PropertyStorage(new string[] {
                "RequestConfiguration"})]
        public virtual Uismv.Requests.RequestConfiguration RequestConfiguration
        {
            get
            {
                // *** Start programmer edit section *** (MVRequest.RequestConfiguration Get start)

                // *** End programmer edit section *** (MVRequest.RequestConfiguration Get start)
                Uismv.Requests.RequestConfiguration result = this.fRequestConfiguration;
                // *** Start programmer edit section *** (MVRequest.RequestConfiguration Get end)

                // *** End programmer edit section *** (MVRequest.RequestConfiguration Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (MVRequest.RequestConfiguration Set start)

                // *** End programmer edit section *** (MVRequest.RequestConfiguration Set start)
                this.fRequestConfiguration = value;
                // *** Start programmer edit section *** (MVRequest.RequestConfiguration Set end)

                // *** End programmer edit section *** (MVRequest.RequestConfiguration Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(Iis.Eais.GosUslugi.MVRequest));
                }
            }
            
            /// <summary>
            /// "MVRequestE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View MVRequestE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("MVRequestE", typeof(Iis.Eais.GosUslugi.MVRequest));
                }
            }
            
            /// <summary>
            /// "MVRequestL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View MVRequestL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("MVRequestL", typeof(Iis.Eais.GosUslugi.MVRequest));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
